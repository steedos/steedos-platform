{
  "type": "page",
  "title": "Welcome to Steedos",
  "body": [
    {
      "type": "service",
      "body": [
        {
          "type": "service",
          "id": "service_field_design",
          "body": [
            {
              "type": "form",
              "title": "",
              "body": [
                {
                  "type": "panel",
                  "header": {
                    "type": "flex",
                    "id": "u:b2c8374e93fe",
                    "items": [
                      {
                        "type": "tpl",
                        "tpl": "<p><h4><strong>设计字段布局</strong></h4> ${designObjectLabel}<span style=\"color: rgb(149, 165, 166);\">  ${designObjectName}</span></p>",
                        "id": "u:4c7bef616400"
                      },
                      {
                        "type": "flex",
                        "id": "u:1bfde03380f8",
                        "items": [
                          {
                            "type": "button",
                            "id": "u:ec9931ea883c",
                            "actionType": "dialog",
                            "dialog": {
                              "type": "dialog",
                              "title": "设置分组",
                              "size": "lg",
                              "data": {
                                "&": "$$",
                                "groups": "${groups|filter:is_default:isFalse|filter:is_hidden:isFalse}",
                                "designObjectName": "${designObjectName}",
                                "__updateDone": false
                              },
                              "body": [
                                {
                                  "type": "form",
                                  "mode": "normal",
                                  "onEvent": {
                                    "change": {
                                      "actions": [
                                        {
                                          "actionType": "setValue",
                                          "componentId": "steedos-set-group",
                                          "args": {
                                            "value": {
                                              "__updateDone": true
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "body": [
                                    {
                                      "type": "service",
                                      "body": [
                                        {
                                          "type": "steedos-input-table",
                                          "enableDialog": false,
                                          "input-table": {
                                            "onEvent": {
                                              "change": {
                                                "actions": [
                                                  {
                                                    "actionType": "setValue",
                                                    "componentId": "steedos-set-group",
                                                    "args": {
                                                      "value": {
                                                        "__updateDone": false
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          "fields": [
                                            {
                                              "name": "group_name",
                                              "label": "名称",
                                              "type": "text",
                                              "id": "u:31952daa443c"
                                            },
                                            {
                                              "name": "visible_on",
                                              "label": "显示条件",
                                              "type": "text",
                                              "amis": {
                                                "type": "input-formula",
                                                "name": "formula",
                                                "evalMode": false,
                                                "variableMode": "tabs",
                                                "variables": "${variables}"
                                              },
                                              "id": "u:8d7551abcd28",
                                              "value": null
                                            },
                                            {
                                              "name": "collapsed",
                                              "label": "默认折叠",
                                              "type": "boolean"
                                            }
                                          ],
                                          "columns": [
                                            {
                                              "name": "group_name"
                                            },
                                            {
                                              "name": "visible_on"
                                            },
                                            {
                                              "name": "collapsed",
                                              "width": 50
                                            }
                                          ],
                                          "name": "groups",
                                          "addable": true,
                                          "editable": true,
                                          "removable": true,
                                          "draggable": false,
                                          "id": "u:776ec89804c0",
                                          "label": "",
                                          "visibleOn": "${variables}"
                                        }
                                      ],
                                      "api": {
                                        "method": "get",
                                        "url": "${context.rootUrl}/service/api/amis-metadata-objects/objects/${designObjectName}/fields/options",
                                        "adaptor": "payload = {data: {variables: SteedosUI.getFormulaVariables(payload.data.options)}};return payload;",
                                        "cache": 30000,
                                        "headers": {
                                          "Authorization": "Bearer ${context.tenantId},${context.authToken}"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": "action",
                                  "label": "取消",
                                  "actionType": "cancel"
                                },
                                {
                                  "type": "action",
                                  "label": "确认",
                                  "level": "primary",
                                  "onEvent": {
                                    "click": {
                                      "actions": [
                                        {
                                          "actionType": "custom",
                                          "script": "///整理分组数据\nconst defaultGroupName = \"未分组\";\nconst hiddenGroupName = \"隐藏\";\nlet setting_groups = _.cloneDeep(event.data.groups);\nif (!_.find(setting_groups, { is_default: true })) {\n  setting_groups.unshift({\n    \"id\": \"default-group\",\n    \"group_name\": defaultGroupName,\n    \"visible_on\": \"\",\n    \"is_default\": true\n  })\n}\nif (!_.find(setting_groups, { is_hidden: true })) {\n  setting_groups.push({\n    id: \"hidden-group\",\n    group_name: hiddenGroupName,\n    visible_on: \"\",\n    is_hidden: true\n  });\n}\nsetting_groups.forEach(function (group) {\n  if (!group.id) {\n    group.id = window.BuilderAmisObject.AmisLib.uuidv4();\n  }\n  if (/\\$\\{.+\\}/.test(group.visible_on)) {\n    group.visible_on = group.visible_on.replaceAll('${', '\\\\${');\n  }\n})\n\n//整理字段与分组关系的数据\nlet design_field = {};\nlet oldGroup = _.cloneDeep(event.data.design_field);\nsetting_groups.forEach(function (group) {\n  if (_.has(oldGroup, group.id)) {\n    design_field[group.id] = oldGroup[group.id];\n    oldGroup = _.omit(oldGroup, group.id);\n  } else {\n    design_field[group.id] = [];\n  }\n})\n//当有分组被删除时，会进入以下if，将该分组下所有字段放入未分组中\nif (oldGroup && !_.isEmpty(oldGroup)) {\n  _.forEach(oldGroup, function (value, key) {\n    design_field[\"default-group\"] = _.unionBy(design_field[\"default-group\"], value);\n  });\n}\n\n//未分组 放在所有分组开头，隐藏 放在所有分组最后\nconst defaultGroup = design_field['default-group'];\nconst hiddenGroup = design_field['hidden-group'];\ndelete design_field['default-group'];\ndelete design_field['hidden-group'];\ndesign_field = _.merge({ 'default-group': defaultGroup }, design_field, { 'hidden-group': hiddenGroup });\n\n//根据design_field调整groups顺序，设置分组与保存时需要groups按照顺序\nconst keys = _.keys(design_field);\nsetting_groups = _.sortBy(setting_groups, function (group) { return _.findIndex(keys, function (key) { return key == group.id }) });\n\ndoAction({\n  actionType: 'setValue',\n  componentId: 'form_field_design',\n  args: {\n    value: {\n      groups: setting_groups,\n      design_field\n    }\n  }\n});"
                                        },
                                        {
                                          "actionType": "closeDialog"
                                        }
                                      ]
                                    }
                                  },
                                  "disabledOn": "${!__updateDone}"
                                }
                              ],
                              "id": "steedos-set-group",
                              "closeOnEsc": false,
                              "closeOnOutside": false,
                              "showCloseButton": true,
                              "showErrorMsg": true,
                              "showLoading": true
                            },
                            "label": "设置分组",
                            "className": "",
                            "disabledOn": "${!__changeDone}"
                          },
                          {
                            "type": "button",
                            "label": "新增字段",
                            "actionType": "dialog",
                            "id": "u:5857ae729799",
                            "visible": false,
                            "dialog": {
                              "type": "dialog",
                              "title": "新增字段",
                              "data": {
                                "appId": "${appId}",
                                "global": "${global}",
                                "context": "${context}",
                                "designObjectName": "${designObjectName}",
                                "_master": "${_master}"
                              },
                              "body": [
                                {
                                  "type": "steedos-object-form",
                                  "label": "对象表单",
                                  "objectApiName": "object_fields",
                                  "recordId": "",
                                  "mode": "edit",
                                  "defaultData": {
                                    "object": "${designObjectName}"
                                  },
                                  "fieldsExtend": {
                                    "object": {
                                      "amis": {
                                        "disabledOn": "true"
                                      }
                                    },
                                    "group": {
                                      "amis": {
                                        "hidden": true
                                      }
                                    }
                                  },
                                  "fields": "",
                                  "id": "u:b71796d3cb8c",
                                  "className": "mb-4",
                                  "enableTabs": true,
                                  "tabsMode": "line"
                                }
                              ],
                              "showCloseButton": true,
                              "showErrorMsg": true,
                              "showLoading": true,
                              "closeOnEsc": false,
                              "dataMapSwitch": false,
                              "size": "lg",
                              "id": "u:066b3884bdd8"
                            }
                          },
                          {
                            "type": "button",
                            "label": "保存",
                            "actionType": "submit",
                            "id": "u:d9039421ea6b",
                            "target": "form_field_design",
                            "level": "primary",
                            "disabledOn": "${!__changeDone}"
                          }
                        ]
                      }
                    ],
                    "style": {
                      "position": "static",
                      "flexWrap": "nowrap",
                      "justifyContent": "space-between",
                      "alignItems": "baseline"
                    },
                    "isFixedHeight": false,
                    "isFixedWidth": false
                  },
                  "body": [
                    {
                      "type": "steedos-board",
                      "id": "steedos_field_deign",
                      "columns": 2,
                      "name": "design_field",
                      "boardSource": "${groups}",
                      "boardClassName": "bg-gray-50 p-2 ",
                      "header": {
                        "className": ""
                      },
                      "boardHeader": {
                        "type": "tpl",
                        "tpl": "${group_name}",
                        "id": "u:76d9a6c7d401"
                      },
                      "cardClassName": "p-1 bg-white border w-full rounded shadow",
                      "cardSchema": {
                        "type": "card",
                        "body": [
                          {
                            "type": "tpl",
                            "tpl": "<p><strong>${label}</strong> ${designObjectLabel}<span style=\"color: rgb(149, 165, 166);\">${_name}</span></p>",
                            "className": "w-4/5",
                            "inline": true
                          },
                          {
                            "type": "action",
                            "className": "w-4/5 mr-7",
                            "label": "",
                            "id": "steedos-field-edit-button",
                            "icon": "fa fa-pencil",
                            "level": "link",
                            "actionType": "dialog",
                            "dialog": {
                              "title": "编辑字段",
                              "body": [
                                {
                                  "type": "service",
                                  "body": {
                                    "type": "steedos-object-form",
                                    "label": "对象表单",
                                    "objectApiName": "object_fields",
                                    "recordId": "${_id}",
                                    "mode": "edit",
                                    "defaultData": {
                                      "object": "${designObjectName}"
                                    },
                                    "fields": [
                                      "label",
                                      "readonly",
                                      "is_wide",
                                      "visible_on"
                                    ],
                                    "fieldsExtend": {
                                      "label": {
                                        "is_wide": true,
                                        "group": ""
                                      },
                                      "readonly": {
                                        "group": ""
                                      },
                                      "is_wide": {
                                        "group": ""
                                      },
                                      "visible_on": {
                                        "group": "",
                                        "amis": {
                                          "type": "input-formula",
                                          "name": "formula",
                                          "evalMode": false,
                                          "variableMode": "tabs",
                                          "variables": "${variables}",
                                          "visibleOn": "${variables}",
                                          "id": "u:618105d5bfad"
                                        }
                                      }
                                    },
                                    "id": "u:b71796d3cb8c",
                                    "className": "mb-4",
                                    "apiRequestAdaptor": "api.data.query = api.data.query.replace('object_fields__update', 'object_fields__upsert')",
                                    "onEvent": {
                                      "submitSucc": {
                                        "weight": 0,
                                        "actions": [
                                          {
                                            "actionType": "custom",
                                            "script": "setTimeout(() => {\n  doAction({\n    \"actionType\": \"broadcast\",\n    \"args\": {\n      \"eventName\": \"@data.changed.object_fields\"\n    }\n  });\n}, 500);\n\n\n"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "api": {
                                    "method": "get",
                                    "url": "${context.rootUrl}/service/api/amis-metadata-objects/objects/${designObjectName}/fields/options",
                                    "adaptor": "payload = {data: {variables: SteedosUI.getFormulaVariables(payload.data.options)}};return payload;",
                                    "cache": 30000,
                                    "headers": {
                                      "Authorization": "Bearer ${context.tenantId},${context.authToken}"
                                    }
                                  }
                                }
                                
                              ],
                              "type": "dialog",
                              "data": {
                                "appId": "${appId}",
                                "global": "${global}",
                                "context": "${context}",
                                "designObjectName": "${designObjectName}",
                                "_master": "${_master}",
                                "_id": "${_id}"
                              },
                              "showCloseButton": true,
                              "showErrorMsg": true,
                              "showLoading": true,
                              "closeOnEsc": false,
                              "dataMapSwitch": false,
                              "size": "md",
                              "id": "u:066b3884bdd8"
                            },
                            "size": "xs"
                          }
                        ],
                        "bodyClassName": "h-7  flex justify-between items-center p-0 pl-10 my-2",
                        "toolbar": [],
                        "className": "mb-0 border-0 bg-none card",
                        "id": "u:296298da1bef"
                      },
                      "cardSource": "${fields}",
                      "vertical": true,
                      "value": "${fieldForGroup}",
                      "onEvent": {
                        "change": {
                          "actions": [
                            {
                              "actionType": "setValue",
                              "componentId": "service_field_design",
                              "args": {
                                "value": {
                                  "__changeDone": false
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "className": "Panel--default max-w-4xl m-auto",
                  "id": "u:3a90104cb6b4"
                }
              ],
              "id": "form_field_design",
              "api": {
                "url": "${context.rootUrl}/graphql",
                "method": "post",
                "dataType": "json",
                "headers": {
                  "Authorization": "Bearer ${context.tenantId},${context.authToken}"
                },
                "requestAdaptor": "var graphqlOrder = \"\";\nvar field_groups = _.cloneDeep(api.data.groups);\n//先修改字段，使系统对象自行自定义\n//根据design_field,修改对象字段的sort_no与groups\nvar index = 1;\nconst defaultGroupId = _.find(field_groups, { 'is_default': true })?.id;\nconst hiddenGroupId = _.find(field_groups, { 'is_hidden': true })?.id;\n_.forEach(api.data.design_field, function (items, key) {\n  let group = _.find(field_groups, { 'id': key }).group_name;\n  if (key == defaultGroupId || key == hiddenGroupId) {\n    group = null;\n  }\n  _.forEach(items, function (item) {\n    const field = _.find(api.data.fields, { 'id': item });\n    //如果是在隐藏分组里的字段，就给visible_on属性赋予{{false}};如果不在隐藏分组里，就判断来自数据库内的visible_on属性是不是{{false}},是就清除，不是就保持不变\n    const visible_on = key == hiddenGroupId ? \"{{false}}\" : (field.attr_visible_on == \"{{false}}\" ? \"{{true}}\" : field.attr_visible_on);\n    let docJson = {\n      sort_no: index * 10,\n      group, visible_on\n    }\n    if (field.id == field._id && field.is_system) {\n      docJson = {\n        object: api.data.$self.designObjectName,\n        type: field.type,\n        _name: field._name,\n        label: field.label,\n        sort_no: index * 10,\n        group,\n        visible_on,\n        is_system: field.is_system\n      }\n    }\n    if (key != hiddenGroupId) {\n      docJson.hidden = false;\n    }\n    let itemOrder = 'upsert' + index + ':object_fields__upsert(id:\"' + item + '\" , doc:' + JSON.stringify(JSON.stringify(docJson)) + '){_id}\\n';\n    graphqlOrder += itemOrder;\n    index++;\n  })\n})\n\n//根据groups，修改对象的字段分组field_groups\n_.remove(field_groups, { is_default: true });\n_.remove(field_groups, { is_hidden: true });\nconst keys = _.keys(api.data.design_field);\nfield_groups = _.sortBy(field_groups, function (group) { return _.findIndex(keys, function (key) { return key == group.id }) });\nfield_groups = field_groups.map(function (group) {\n  return _.omit(group, 'id');\n})\nconst groupOrder = 'upsert0:objects__upsert(id:\"' + api.data.$self.designObjectId + '\" , doc:' + JSON.stringify(JSON.stringify({ field_groups, name: api.data.$self.designObjectName })) + ') {_id}';\ngraphqlOrder += groupOrder;\n\n\ngraphqlOrder = 'mutation {' + graphqlOrder + '}';\nreturn {\n  ...api,\n  data: {\n    query: graphqlOrder\n  }\n}",
                "adaptor": "if (payload.errors) {\n  payload.status = 2;\n  payload.msg = window.t ? window.t(payload.errors[\n    0\n  ].message) : payload.errors[\n    0\n  ].message;\n}\nreturn payload;",
                "messages": {},
                "data": {
                  "design_field": "${design_field}",
                  "groups": "${groups}",
                  "fields": "${fields}",
                  "$self": "$$"
                }
              },
              "visibleOn": "${dataInitialed}",
              "wrapWithPanel": false,
              "name": "form_field_design",
              "onEvent": {
                "submitSucc": {
                  "weight": 0,
                  "actions": [
                    {
                      "actionType": "custom",
                      "script": "setTimeout(() => {\n  doAction({\n    \"actionType\": \"broadcast\",\n    \"args\": {\n      \"eventName\": \"@data.changed.object_fields\"\n    }\n  });\n}, 500);\n\n\n"
                    }
                  ]
                },
                "change": {
                  "actions": [
                    {
                      "actionType": "setValue",
                      "componentId": "service_field_design",
                      "args": {
                        "value": {
                          "__changeDone": true
                        }
                      }
                    }
                  ]
                }
              }
            }
          ],
          "api": {
            "method": "post",
            "url": "${context.rootUrl}/graphql?designObjectId=${designObjectId}",
            "data": {
              "query": "{fields:object_fields(filters: [[\"object\",\"=\",\"${designObjectName}\"]],sort: \"sort_no asc\"){_id,label,_name,group,type,sort_no,modified,is_wide,is_system,hidden,visible_on,recordPermissions: _permissions{allowEdit}}}",
              "field_groups": "${field_groups}",
              "dataInitialed": "${dataInitialed}",
              "designObjectName": "${designObjectName}",
              "eventData": "${eventData}",
              "fieldForGroup": "${fieldForGroup}"
            },
            "headers": {
              "Authorization": "Bearer ${context.tenantId},${context.authToken}"
            },
            "messages": {},
            "requestAdaptor": "",
            "adaptor": "//筛选出可编辑的字段\nvar oldFields = _.filter(payload.data.fields, function (obj) { return obj.recordPermissions.allowEdit; });\n//将group为空的字段分为未分组的组中,将系统字段的_id改为对象名.字段名\noldFields = _.map(oldFields, function (obj) {\n  obj.originId = obj._id;\n  if (obj.hidden || obj.visible_on == \"{{false}}\") {\n    obj.group = \"隐藏\";\n  }else if (obj.group === null) {\n    obj.group = \"未分组\";\n  }\n  if (obj.is_system) {\n    obj._id = api.data.designObjectName + \".\" + obj._name;\n  }\n  return obj;\n});\n\n//整合出字段的属性集合\nconst fields = oldFields.map((field) => {\n  return {\n    \"id\": field._id,//用与steedos-board组件的关系分辨\n    \"_name\": field._name,\n    \"label\": field.label,\n    \"_id\": field.originId,//用于打开steedos-object-form\n    \"columnSpan\": field.is_wide ? 2 : 1,\n    \"is_system\": field.is_system,\n    \"type\": field.type,\n    \"attr_visible_on\": field.visible_on\n  }\n})\n\n//去重并去除隐藏和未分组\nlet newArray = _.reject(_.uniqBy(oldFields, \"group\"), function(obj) {\n  return obj.group == \"隐藏\" || obj.group == \"未分组\";\n});\n//从字段的group属性中，整合出字段分组的属性集合\nlet field_groups = _.map(newArray, function (obj) {\n  return {\n    \"id\": window.BuilderAmisObject.AmisLib.uuidv4(), \n    \"group_name\": obj.group,\n    \"visible_on\": \"\"\n  };\n});\n\n//合并对象上的field_groups与字段上的group\nlet groups = _.unionBy(api.data.field_groups, field_groups, 'group_name');\n\n//判断是否第一次调用接口，不是的话（说明是触发了datachange事件），返回fields与fieldUpdateData；目前新增与删除都不支持\nif (api.data.dataInitialed) {\n  const eventData = api.data.eventData;\n  let fieldUpdateData = \"\";\n  const fieldForGroup = api.data.fieldForGroup;\n  let fieldForGroupLength = 0;\n  _.forIn(fieldForGroup, function (value, key) {\n    fieldForGroupLength += value.length;\n  });\n  if (fieldForGroupLength < fields.length) {\n    fieldUpdateData = {\n      type: \"insert\",\n      id: eventData.result.data.recordId\n    }\n  } else if (fieldForGroupLength > fields.length) {\n    fieldUpdateData = {\n      type: \"delete\",\n      id: eventData._id\n    }\n  }\n  return payload = {\n    data: {\n      fields,\n      fieldUpdateData\n    }\n  }\n}\n\n//整合字段与分组的关系\nconst oldFieldsInGroups = _.groupBy(oldFields, \"group\");\nlet fieldForGroup = _.mapValues(_.groupBy(groups, \"id\"), function (group,key) {\n  if (oldFieldsInGroups[group[0].group_name]) {\n    return _.map(oldFieldsInGroups[group[0].group_name], function (obj) {\n      return obj._id;\n    });\n  } else {\n    return [];\n  }\n});\n\n//未分组 放在所有分组开头，隐藏 放在所有分组最后\nconst defaultGroupId = _.find(groups, { 'is_default': true }).id;\nconst hiddenGroupId = _.find(groups, { 'is_hidden': true }).id;\nconst defaultGroup = fieldForGroup[defaultGroupId];\nconst hiddenGroup = fieldForGroup[hiddenGroupId];\ndelete fieldForGroup[defaultGroupId];\ndelete fieldForGroup[hiddenGroupId];\nfieldForGroup = _.merge({ [defaultGroupId]: defaultGroup }, fieldForGroup, { [hiddenGroupId]: hiddenGroup });\n\n//根据fieldForGroup调整groups顺序，设置分组与保存时需要groups按照顺序\nconst keys = _.keys(fieldForGroup);\ngroups = _.sortBy(groups, function (group) { return _.findIndex(keys, function (key) { return key == group.id }) });\n\nreturn payload = {\n  data: {\n    fields,\n    groups,\n    fieldForGroup,\n    dataInitialed: true\n  }\n};",
            "sendOn": "!!this.designObjectId"
          },
          "messages": {},
          "onEvent": {
            "fetchInited": {
              "actions": [
                {
                  "actionType": "custom",
                  "script": "//新增或删除时才会触发，目前暂不支持\nconst fieldForGroup = context.props.data.fieldForGroup;\nconst fieldUpdateData = event.data.fieldUpdateData;\nif (fieldUpdateData && fieldUpdateData.type == \"delete\") {\n  _.forIn(fieldForGroup, function (group, group_name) {\n    _.remove(group, function (field) {\n      return field === fieldUpdateData.id;\n    })\n  });\n} else if (fieldUpdateData && fieldUpdateData.type == \"insert\") {\n  fieldForGroup[\"未分组\"].push(fieldUpdateData.id);\n}\n// doAction({\n//   actionType: 'setValue',\n//   componentId: \"service_field_design\",\n//   args: {\n//     value: { fieldForGroup }\n//   }\n// });\n\ndoAction({\n  actionType: 'setValue',\n  componentId: \"form_field_design\",\n  args: {\n    value: { design_field:fieldForGroup }\n  }\n});\n\n",
                  "expression": "${event.data.fieldUpdateData}"
                }
              ]
            }
          },
          "initFetch": false,
          "data": {
            "eventData": "",
            "__changeDone": true
          }
        }
      ],
      "id": "u:02f594329e1e",
      "api": {
        "method": "post",
        "url": "${context.rootUrl}/graphql",
        "data": {
          "query": "{objects(filters: [[\"name\",\"=\",\"${designObjectName}\"]]){_id,name,label,field_groups}}"
        },
        "headers": {
          "Authorization": "Bearer ${context.tenantId},${context.authToken}"
        },
        "messages": {},
        "requestAdaptor": "",
        "adaptor": "const field_groups = payload.data.objects[0] && _.map(payload.data.objects[0].field_groups, function (obj) {\n  return {\n    \"id\": window.BuilderAmisObject.AmisLib.uuidv4(), //唯一性id\n    \"group_name\": obj.group_name,\n    \"visible_on\": obj.visible_on,\n    \"collapsed\": obj.collapsed\n  }\n});\nfield_groups.unshift({\n  id: \"hidden-group\",\n  group_name: \"隐藏\",\n  visible_on: \"\",\n  is_hidden: true\n});\nfield_groups.unshift({\n  id: \"default-group\",\n  group_name: \"未分组\",\n  visible_on: \"\",\n  is_default: true\n});\n\n\n\nconst designObjectId = payload.data.objects[0] && payload.data.objects[0]._id;\nreturn payload = {\n  data: {\n    field_groups,\n    designObjectId,\n designObjectLabel: payload.data.objects[0] && payload.data.objects[0].label,\n   _master: {\n      recordId: designObjectId\n    }\n  }\n}"
      },
      "messages": {},
      "onEvent": {
        "@data.changed.object_fields": {
          "actions": [
            {
              "actionType": "reload",
              "data": {
                "eventData": "${event.data}"
              },
              "componentId": "service_field_design"
            }
          ]
        }
      }
    }
  ],
  "regions": [
    "body"
  ],
  "data": {
    "initialValues": {},
    "appId": "builder",
    "title": "",
    "context": "${context}",
    "dataInitialed": false
  },
  "id": "u:993ee4316643",
  "css": {
    ".antd-TplField p": {
      "margin": "0.625rem 0.625rem"
    }
  },
  "className": "steedos-design-field",
  "asideResizor": false,
  "pullRefresh": {
    "disabled": true
  }
}